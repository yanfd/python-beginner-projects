diff --git a/projects/Calculate Age/calculate.py b/projects/Calculate Age/calculate.py
deleted file mode 100644
index a7dc34f..0000000
--- a/projects/Calculate Age/calculate.py	
+++ /dev/null
@@ -1,49 +0,0 @@
-import time
-from calendar import isleap
-
-
-# judge the leap year
-def judge_leap_year(year):
-    if isleap(year):
-        return True
-    else:
-        return False
-
-
-# returns the number of days in each month
-def month_days(month, leap_year):
-    if month in [1, 3, 5, 7, 8, 10, 12]:
-        return 31
-    elif month in [4, 6, 9, 11]:
-        return 30
-    elif month == 2 and leap_year:
-        return 29
-    elif month == 2 and (not leap_year):
-        return 28
-
-
-name = input("input your name: ")
-age = input("input your age: ")
-localtime = time.localtime(time.time())
-
-year = int(age)
-month = year * 12 + localtime.tm_mon
-day = 0
-
-begin_year = int(localtime.tm_year) - year
-end_year = begin_year + year
-
-# calculate the days
-for y in range(begin_year, end_year):
-    if judge_leap_year(y):
-        day = day + 366
-    else:
-        day = day + 365
-
-leap_year = judge_leap_year(localtime.tm_year)
-for m in range(1, localtime.tm_mon):
-    day = day + month_days(m, leap_year)
-
-day = day + localtime.tm_mday
-print("%s's age is %d years or " % (name, year), end="")
-print("%d months or %d days" % (month, day))
diff --git a/projects/Calculate Age/src/__init__.py b/projects/Calculate Age/src/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/projects/Calculate Age/src/calculate_age.py b/projects/Calculate Age/src/calculate_age.py
new file mode 100644
index 0000000..193fb64
--- /dev/null
+++ b/projects/Calculate Age/src/calculate_age.py	
@@ -0,0 +1,42 @@
+import time
+from utilize_date import judge_leap_year, month_days
+
+
+def age_calculator(name, age):
+    """
+        Calculate user's age in years, month, and days
+        based on current date and print.
+
+        Args:
+            name (str): user's name.
+            age (int): user's age in years.
+
+        Returns:
+            None.
+        """
+    localtime = time.localtime(time.time())
+
+    year = int(age)
+    month = year * 12 + localtime.tm_mon
+    day = 0
+
+    begin_year = int(localtime.tm_year) - year
+    end_year = begin_year + year
+
+    for y in range(begin_year, end_year):
+        if judge_leap_year(y):
+            day += 366
+        else:
+            day += 365
+
+    leap_year = judge_leap_year(localtime.tm_year)
+    for m in range(1, localtime.tm_mon):
+        day += month_days(m, leap_year)
+
+    day += localtime.tm_mday
+
+    return f"{name}'s age is {year} years or {month} months or {day} days"
+
+
+
+
diff --git a/projects/Calculate Age/src/main.py b/projects/Calculate Age/src/main.py
new file mode 100644
index 0000000..b775235
--- /dev/null
+++ b/projects/Calculate Age/src/main.py	
@@ -0,0 +1,35 @@
+from calculate_age import age_calculator
+
+
+def main():
+    """
+        the user to input name and age, validate input,
+        and calculates and displays the user age in years, months and days.
+
+        Args:
+            None.
+
+        Return:
+            None.
+        """
+    input_name = input("input your name: ")
+
+    while True:
+        input_age = input("input your age: ")
+        try:
+            string_to_int_age = int(input_age)
+            if string_to_int_age <= 0:
+                print("Please input a positive number.")
+            else:
+                break
+        except ValueError:
+            print("Please input a valid age.")
+
+    result = age_calculator(input_name, string_to_int_age)
+
+    print(result)
+
+if __name__ == "__main__":
+    main()
+
+
diff --git a/projects/Calculate Age/src/utilize_date.py b/projects/Calculate Age/src/utilize_date.py
new file mode 100644
index 0000000..8d8b129
--- /dev/null
+++ b/projects/Calculate Age/src/utilize_date.py	
@@ -0,0 +1,36 @@
+from calendar import isleap
+
+
+def judge_leap_year(year):
+    """
+            judge the leap year.
+
+        Args:
+            year (int): To check the year.
+        return:
+             bool: Ture if the year is a leap year, False otherwise.
+        """
+    if isleap(year):
+        return True
+    else:
+        return False
+
+
+def month_days(month, leap_year):
+    """
+        Returns the number of days in each month
+
+        Args:
+             month (int): The month 1-12.
+
+        Returns:
+            int: The number of days in the month.
+        """
+    if month in [1, 3, 5, 7, 8, 10, 12]:
+        return 31
+    elif month in [4, 6, 9, 11]:
+        return 30
+    elif month == 2 and leap_year:
+        return 29
+    elif month == 2 and (not leap_year):
+        return 28
diff --git a/projects/Calculate Age/tests/__init__.py b/projects/Calculate Age/tests/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/projects/Calculate Age/tests/test_calculate_age.py b/projects/Calculate Age/tests/test_calculate_age.py
new file mode 100644
index 0000000..af0c07b
--- /dev/null
+++ b/projects/Calculate Age/tests/test_calculate_age.py	
@@ -0,0 +1,25 @@
+import time
+from unittest.mock import patch
+from calculate_age import age_calculator
+
+@patch('time.time', return_value=1621848668.0)
+def test_age_calculator(mock_time):
+    name = "Chloe"
+    age = 30
+    expect_output = "Chloe's age is 30 years or 365 months or 11102 days"
+    assert age_calculator(name, age) == expect_output
+
+def test_age_calculator_negative_age():
+    name = "Emma"
+    age = -5
+    try:
+        age_calculator(name, age)
+    except ValueError as e:
+        assert str(e) == "Please input a positive number."
+
+
+def test_age_calculator_leap_year():
+    name = "David"
+    age = 30
+    expect_output_leap_year = "David's age is 30 years or 365 months or 11100 days"
+    assert age_calculator(name, age) == expect_output_leap_year
diff --git a/projects/Calculate Age/test_calculate.py b/projects/Calculate Age/tests/test_utilize_date.py
similarity index 83%
rename from projects/Calculate Age/test_calculate.py
rename to projects/Calculate Age/tests/test_utilize_date.py
index 369ac65..54e5efa 100644
--- a/projects/Calculate Age/test_calculate.py	
+++ b/projects/Calculate Age/tests/test_utilize_date.py	
@@ -1,5 +1,6 @@
 import pytest
-from calculate import judge_leap_year, month_days
+from utilize_date import judge_leap_year, month_days
+
 
 def test_judge_leap_year():
     assert judge_leap_year(2000) == True
@@ -9,6 +10,7 @@ def test_judge_leap_year():
     assert judge_leap_year(2400) == True
     assert judge_leap_year(2100) == False
 
+
 def test_month_days():
     assert month_days(7, False) == 31
     assert month_days(4, True) == 30
@@ -17,4 +19,5 @@ def test_month_days():
     assert month_days(1, False) == 31
     assert month_days(11, True) == 30
 
-# "pytest -s test_calculate.py" to test this file
\ No newline at end of file
+
+# "pytest -s test_utilize_date.py" to test this file
